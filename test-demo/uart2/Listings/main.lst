C51 COMPILER V9.56.0.0   MAIN                                                              10/25/2019 13:03:35 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5_c51\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC15F4K60S4 系列 定时器1用作串口1的波特率发生器举例------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966-------------------------*/
   7          /* --- Web: www.STCMCU.com --------------------------------------------*/
   8          /* --- Web: www.GXWMCU.com --------------------------------------------*/
   9          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序        */
  10          /* 如果要在文章中应用此代码,请在文章中注明使用了STC的资料及程序        */
  11          /*---------------------------------------------------------------------*/
  12          
  13          //本示例在Keil开发环境下请选择Intel的8058芯片型号进行编译
  14          //若无特别说明,工作频率一般为11.0592MHz
  15          
  16          
  17          #include "reg51.h"
  18          #include "intrins.h"
  19          
  20          typedef unsigned char BYTE;
  21          typedef unsigned int WORD;
  22          
  23          #define FOSC 11059200L          //系统频率
  24          #define BAUD 115200             //串口波特率
  25          
  26          #define NONE_PARITY     0       //无校验
  27          #define ODD_PARITY      1       //奇校验
  28          #define EVEN_PARITY     2       //偶校验
  29          #define MARK_PARITY     3       //标记校验
  30          #define SPACE_PARITY    4       //空白校验
  31          
  32          #define PARITYBIT EVEN_PARITY   //定义校验位
  33          
  34          sfr P0M1 = 0x93;
  35          sfr P0M0 = 0x94;
  36          sfr P1M1 = 0x91;
  37          sfr P1M0 = 0x92;
  38          sfr P2M1 = 0x95;
  39          sfr P2M0 = 0x96;
  40          sfr P3M1 = 0xb1;
  41          sfr P3M0 = 0xb2;
  42          sfr P4M1 = 0xb3;
  43          sfr P4M0 = 0xb4;
  44          sfr P5M1 = 0xC9;
  45          sfr P5M0 = 0xCA;
  46          sfr P6M1 = 0xCB;
  47          sfr P6M0 = 0xCC;
  48          sfr P7M1 = 0xE1;
  49          sfr P7M0 = 0xE2;
  50          
  51          sfr AUXR  = 0x8e;               //辅助寄存器
  52          
  53          sfr P_SW1   = 0xA2;             //外设功能切换寄存器1
  54          
C51 COMPILER V9.56.0.0   MAIN                                                              10/25/2019 13:03:35 PAGE 2   

  55          #define S1_S0 0x40              //P_SW1.6
  56          #define S1_S1 0x80              //P_SW1.7
  57          
  58          sbit P22 = P2^2;
  59          
  60          bit busy;
  61          
  62          void SendData(BYTE dat);
  63          void SendString(char *s);
  64          
  65          void main()
  66          {
  67   1          P0M0 = 0x00;
  68   1          P0M1 = 0x00;
  69   1          P1M0 = 0x00;
  70   1          P1M1 = 0x00;
  71   1          P2M0 = 0x00;
  72   1          P2M1 = 0x00;
  73   1          P3M0 = 0x00;
  74   1          P3M1 = 0x00;
  75   1          P4M0 = 0x00;
  76   1          P4M1 = 0x00;
  77   1          P5M0 = 0x00;
  78   1          P5M1 = 0x00;
  79   1          P6M0 = 0x00;
  80   1          P6M1 = 0x00;
  81   1          P7M0 = 0x00;
  82   1          P7M1 = 0x00;
  83   1      
  84   1          ACC = P_SW1;
  85   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  86   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  87   1          
  88   1      //  ACC = P_SW1;
  89   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
  90   1      //  ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
  91   1      //  P_SW1 = ACC;  
  92   1      //  
  93   1      //  ACC = P_SW1;
  94   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
  95   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
  96   1      //  P_SW1 = ACC;  
  97   1      
  98   1      #if (PARITYBIT == NONE_PARITY)
                  SCON = 0x50;                //8位可变波特率
              #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
 101   1          SCON = 0xda;                //9位可变波特率,校验位初始为1
 102   1      #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
 105   1      
 106   1          AUXR = 0x40;                //定时器1为1T模式
 107   1          TMOD = 0x00;                //定时器1为模式0(16位自动重载)
 108   1          TL1 = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
 109   1          TH1 = (65536 - (FOSC/4/BAUD))>>8;
 110   1          TR1 = 1;                    //定时器1开始启动
 111   1          ES = 1;                     //使能串口中断
 112   1          EA = 1;
 113   1      
 114   1          SendString("STC15F2K60S2\r\nUart Test !\r\n");
 115   1          while(1);
 116   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              10/25/2019 13:03:35 PAGE 3   

 117          
 118          /*----------------------------
 119          UART 中断服务程序
 120          -----------------------------*/
 121          void Uart() interrupt 4 using 1
 122          {
 123   1          if (RI)
 124   1          {
 125   2              RI = 0;                 //清除RI位
 126   2              P0 = SBUF;              //P0显示串口数据
 127   2              P22 = RB8;              //P2.2显示校验位
 128   2          }
 129   1          if (TI)
 130   1          {
 131   2              TI = 0;                 //清除TI位
 132   2              busy = 0;               //清忙标志
 133   2          }
 134   1      }
 135          
 136          /*----------------------------
 137          发送串口数据
 138          ----------------------------*/
 139          void SendData(BYTE dat)
 140          {
 141   1          while (busy);               //等待前面的数据发送完成
 142   1          ACC = dat;                  //获取校验位P (PSW.0)
 143   1          if (P)                      //根据P来设置校验位
 144   1          {
 145   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
 148   2              TB8 = 1;                //设置校验位为1
 149   2      #endif
 150   2          }
 151   1          else
 152   1          {
 153   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
 156   2              TB8 = 0;                //设置校验位为0
 157   2      #endif
 158   2          }
 159   1          busy = 1;
 160   1          SBUF = ACC;                 //写数据到UART数据寄存器
 161   1      }
 162          
 163          /*----------------------------
 164          发送字符串
 165          ----------------------------*/
 166          void SendString(char *s)
 167          {
 168   1          while (*s)                  //检测字符串结束标志
 169   1          {
 170   2              SendData(*s++);         //发送当前字符
 171   2          }
 172   1      }
 173          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    150    ----
   CONSTANT SIZE    =     28    ----
C51 COMPILER V9.56.0.0   MAIN                                                              10/25/2019 13:03:35 PAGE 4   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
